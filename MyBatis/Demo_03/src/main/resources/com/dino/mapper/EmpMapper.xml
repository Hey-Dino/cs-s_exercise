<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dino.mapper.EmpMapper">

    <!--List<Emp> getAllEmp();-->
    <!--<select id="getAllEmp" resultType="Emp">
        &lt;!&ndash; 方法一：通过【字段别名】解决字段名和属性名的映射关系 &ndash;&gt;
        &lt;!&ndash; SELECT eid, emp_name empName, did FROM emp; &ndash;&gt;

        &lt;!&ndash; 方法二：配合mybatis-config.xml配置文件的setting选项使用 &ndash;&gt;
        &lt;!&ndash; SELECT * FROM emp; &ndash;&gt;
    </select>-->


    <resultMap id="empResultMap" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <!--<result property="dept" column="dept"></result>-->
    </resultMap>
    <!-- 方法三：使用resultMap配置 -->
    <select id="getAllEmp" resultMap="empResultMap">
        SELECT * FROM emp;
    </select>


    <!-- 处理多对一映射关系 方式一：级联属性赋值 -->
    <resultMap id="empAndDeptResultMap" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="dept.did" column="did"></result>
        <result property="dept.deptName" column="dept_name"></result>
        <result property="dept.loc" column="loc"></result>
    </resultMap>
    <!-- 处理多对一映射关系 方式二：association -->
    <resultMap id="empAndDeptResultMapTwo" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <!--
            association：处理多对一的映射关系
                property：需要处理多多一映射关系的属性名
                javaType：该属性的类型
         -->
        <association property="dept" javaType="Dept">
            <id property="did" column="did"></id>
            <result property="deptName" column="dept_name"></result>
            <result property="loc" column="loc"></result>
        </association>
    </resultMap>
    <!--Emp getEmpAndDept(@Param("eid") Integer eid);-->
    <select id="getEmpAndDept" resultMap="empAndDeptResultMapTwo">
        SELECT * FROM emp LEFT JOIN dept ON emp.did = dept.did WHERE emp.eid = #{eid};
    </select>


    <!--
        Emp getEmpAndDeptByStep(@Param("eid") Integer eid);
        分布查询：第一步
    -->
    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <!--
            select：设置分布查询的 SQL 的唯一标识（namespace.SQLId 或 mapper接口的全类名.方法名）
            column：设置分布查询的条件
            fetchType：当开启全局延迟加载后，可通过此属性手动控制延迟加载的效果
                **也可单独使用，不配合全局延迟加载设置**
                lazy表示延迟加载，eager表示立即加载
        -->
        <association property="dept"
                     select="com.dino.mapper.DeptMapper.getEmpAndDeptByStep"
                     column="did"
                     fetchType="lazy"></association>
    </resultMap>
    <select id="getEmpAndDeptByStep" resultMap="empResultMap">
        SELECT * FROM emp WHERE eid = #{eid};
    </select>


    <select id="getDeptAndEmpByStep" resultType="Emp">
        SELECT * FROM emp WHERE did = #{did};
    </select>
</mapper>